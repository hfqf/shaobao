//
//  HttpConnctionManager.m
//  XXT_SH
//
//  Created by Points on 13-9-29.
//  Copyright (c) 2013年 Points. All rights reserved.
//
//


#import "HttpConnctionManager.h"
#import "ADTGropuInfo.h"
#import "OpenUDID.h"
@implementation HttpConnctionManager


- (void)dealloc
{
    [super dealloc];
}

- (id)init
{
    self = [super initWithBaseURL:[NSURL URLWithString:BJ_SERVER]];
    if(self)
    {
        //并发线程数
        AFHTTPRequestSerializer * serial = [[AFHTTPRequestSerializer alloc]init];
        [serial setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField: @"Content-type"];
        [serial setValue:@"utf-8" forHTTPHeaderField:@"Charset"];
        [self setRequestSerializer:serial];
        [serial release];

        AFJSONResponseSerializer *responseSerializer = [AFJSONResponseSerializer serializerWithReadingOptions:NSJSONReadingAllowFragments];
        [self setResponseSerializer:responseSerializer];
    }
    return self;
}

SINGLETON_FOR_CLASS(HttpConnctionManager)

#define APP_URL    @"http://itunes.apple.com/lookup?id=677079618"

//检查版本更新
- (void)checkVersion:(SuccessedBlock)success failedBolck:(FailedBlock)failed
{
    self = [super initWithBaseURL:[NSURL URLWithString:BJ_SERVER]];
    [self startGetWith:APP_URL paragram:nil successedBlock:^(NSDictionary *retDic){
        success(retDic);
    }
           failedBolck:^(AFHTTPRequestOperation *operation, NSError *error){
           }];
}

#pragma mark - 封装过的网络请求接口

- (void)startGetWith:( NSString *)url
            paragram:(NSDictionary *)para
      successedBlock:(SuccessedBlock)success
         failedBolck:(FailedBlock)failed
{
    AFHTTPRequestOperation *  operation = [[AFHTTPRequestOperation alloc] initWithRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:url]]];
    [operation  setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject)
     {
         if(success)
         {
             id res  = [operation.responseString objectFromJSONString];
             success((NSDictionary *)res);
         }
     }
                                      failure:^(AFHTTPRequestOperation *operation, NSError *error)
     {
         if (failed)
         {
             failed(operation, error);
         }
     }
     ];
    [operation start];
    [operation release];
}

//普通的post请求
- (void)startNormalPostWith:( NSString *)url
                   paragram:(NSDictionary *)para
             successedBlock:(SuccessedBlock)success
                failedBolck:(FailedBlock)failed
{
    self = [super initWithBaseURL:[NSURL URLWithString:BJ_SERVER]];
    [self POST:url
    parameters:para
       success:^(AFHTTPRequestOperation *operation, id responseObject)
     {
         //             if([[responseObject objectForKey:@"result"]integerValue] == KEY_VALUE_TOKEN_OUTDATE)
         //             {
         //                 [[NSUserDefaults standardUserDefaults]setObject:@"1" forKey:KEY_IS_OUTDEATE_TOKEN];
         //                 //[PubllicMaskViewHelper showMaskViewIn:@"用户身份失效,自动重新登录"];
         //                 [self performSelector:@selector(logoutForTokenOutdate) withObject:nil afterDelay:1];
         //                 return ;
         //             }
         SpeLog(@"responseObject==%@",responseObject);
         success(responseObject);
     }
       failure:^(AFHTTPRequestOperation *operation, NSError *error)
     {
         SpeLog(@"error==%@",error);
         
         failed(operation,error);
     }
     ];
}

//上传file类型的post请求
- (void)startMulitDataPost:( NSString *)url
                  postFile:(NSData *)uploadFileData
                  paragram:(NSDictionary *)para
            successedBlock:(SuccessedBlock)success
               failedBolck:(FailedBlock)failed
{
    self = [super initWithBaseURL:[NSURL URLWithString:BJ_SERVER]];
    [self POST:url
    parameters:para
constructingBodyWithBlock:^(id <AFMultipartFormData> formData)
     {
         if(uploadFileData)
         {
             [formData appendPartWithFileData:uploadFileData name:@"file" fileName:@"pic.jpg" mimeType:@"image/jpg"];
         }
     }
       success:^(AFHTTPRequestOperation *operation, id responseObject)
     {
         if(success)
         {
             id res  = [operation.responseString objectFromJSONString];
             SpeAssert([res isKindOfClass:[NSDictionary class]]);
             success((NSDictionary *)res);
         }
     }
       failure:^(AFHTTPRequestOperation *operation, NSError *error)
     {
         if (failed)
         {
             failed(nil, error);
         }
     }
     ];
}

//上传file类型的post请求
- (void)startMulitDataPost:( NSString *)url
                  fileName:(NSString *)fileName
                  postFile:(NSData *)uploadFileData
                  paragram:(NSDictionary *)para
            successedBlock:(SuccessedBlock)success
               failedBolck:(FailedBlock)failed
{
    self = [super initWithBaseURL:[NSURL URLWithString:BJ_SERVER]];

    [self POST:url
    parameters:para
constructingBodyWithBlock:^(id <AFMultipartFormData> formData)
     {
         if(uploadFileData)
         {
             [formData appendPartWithFileData:uploadFileData name:@"file" fileName:[NSString stringWithFormat:@"%@.jpg",fileName] mimeType:@"image/jpg"];
         }
     }
       success:^(AFHTTPRequestOperation *operation, id responseObject)
     {
         if(success)
         {
             id res  = [operation.responseString objectFromJSONString];
             SpeAssert([res isKindOfClass:[NSDictionary class]]);
             success((NSDictionary *)res);
         }
     }
       failure:^(AFHTTPRequestOperation *operation, NSError *error)
     {
         if (failed)
         {
             failed(nil, error);
         }
     }
     ];
}

#pragma mark -  mime-type detection
/**
 根据路径自动获取上传文件需要的miniType,contentType
 */
- (void)transferWithFileName:(NSString **)fileName andContentType:(NSString **)contentType filePath:(NSString *)filePath
{
    if (!*fileName) {
        *fileName = [filePath lastPathComponent];
    }
    if (!*contentType) {
        *contentType = [HttpConnctionManager mimeTypeForFileAtPath:filePath];
    }
}

//  mime-type detection
+ (NSString *)mimeTypeForFileAtPath:(NSString *)path
{
    if (![[[[NSFileManager alloc] init] autorelease] fileExistsAtPath:path]) {
        return nil;
    }
    CFStringRef UTI = UTTypeCreatePreferredIdentifierForTag(kUTTagClassFilenameExtension, (CFStringRef)[path pathExtension], NULL);
    CFStringRef MIMEType = UTTypeCopyPreferredTagWithClass (UTI, kUTTagClassMIMEType);
    CFRelease(UTI);
    if (!MIMEType) {
        return @"application/octet-stream";
    }
    return NSMakeCollectable([(NSString *)MIMEType autorelease]);
}


- (NSString *)encodeToPercentEscapeString: (NSString *) input
{

    SpeLog(@"input=%@",input);
    NSString *outputStr = (NSString *)
    CFURLCreateStringByAddingPercentEscapes(kCFAllocatorDefault,
                                            (CFStringRef)input,
                                            NULL,
                                            (CFStringRef)@"!*'();:@&=+$,/?%#[]",
                                            kCFStringEncodingUTF8);
    return outputStr;
}


//登陆
- (void)startLogin:(NSString *)name pwd:(NSString *)pwd successedBlock:(SuccessedBlock)success failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             
                             @"resultCode" : @"0",
                             @"password":pwd,
                             @"loginName":name
                             
                             };
    NSDictionary * dic =  @{
                            @"SIGN":@"",
                            @"TOKEN":@"",
                            @"KEY":  @"jsddkj",
                            @"CODE": @"LoginServer.userLogin",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
  
    
}

//获取待办文件
- (void)getTodoFile:(NSString *)appType
                key:(NSString *)key
         actorClass:(NSString *)actorClass
         startIndex:(NSString *)start
     successedBlock:(SuccessedBlock)success
        failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"userId":[LoginUserUtil userId],
                             @"resultCode" : @"0",
                             @"appType":appType,
                             @"subject":key== nil ? @"" : key,
                             @"actorClass" : actorClass,
                             @"startIndex": [NSNumber numberWithInteger:[start integerValue]],
                             @"recordCount":[NSNumber numberWithInteger:20],
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ItemServer.getItemTaskList",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
 
}

//获取待办文件详情
- (void)getTodoFileInfoWith:(NSString *)msgId
             successedBlock:(SuccessedBlock)success
                failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"userId":[LoginUserUtil userId],
                             @"resultCode" : @"0",
                             @"messageId" : msgId,
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ItemServer.getUserWorkItem",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
    
}

//获取待办文件
- (void)getDoneFile:(NSString *)actor
                key:(NSString *)key
         actorClass:(NSString *)actorClass
         startIndex:(NSString *)start
     successedBlock:(SuccessedBlock)success
        failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"userId":[LoginUserUtil userId],
                             @"resultCode" : @"0",
                             @"subject":key== nil ? @"" : key,
                             @"startDate":@"",
                             @"endDate"  : @"",
                             @"actor" : actorClass,
                             @"startIndex": [NSNumber numberWithInteger:[start integerValue]],
                             @"recordCount":[NSNumber numberWithInteger:20],
                             @"status" : @"1"
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"DocumentServer.getDocList2",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
    
}

//获取邮件列表
- (void)getEmailWithType:(NSInteger)type
                     key:(NSString *)key
                  sender:(NSString *)senderId
              startIndex:(NSString *)start
          successedBlock:(SuccessedBlock)success
             failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"userId":[LoginUserUtil userId],
                             @"resultCode" : @"0",
                             @"folder":[NSNumber numberWithInteger:type],
                             @"subject":key== nil ? @"" : key,
                             @"sender":senderId,
                             @"beginTime":@"",
                             @"endTime"  : @"",
                             @"startIndex": [NSNumber numberWithInteger:[start integerValue]],
                             @"recordCount":[NSNumber numberWithInteger:20],
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"MailServer.getMailList",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)GetEmialInfo:(NSString *)mailId
           isSaveBox:(BOOL)isSaveBox
              msgId:(NSString *)msgId
      successedBlock:(SuccessedBlock)success
         failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = nil;
     reqDic = isSaveBox ? @{
                             @"resultCode" : @"0",
                             @"mailId" : mailId,
                             @"msgId":msgId,
                             @"mailInfo" : [NSNumber numberWithBool:YES],
                             @"mailPerson" :[NSNumber numberWithBool:NO],
                             }
                :
                            @{
                              @"resultCode" : @"0",
                              @"mailId" : mailId,
                              @"mailInfo" : [NSNumber numberWithBool:YES],
                              @"mailPerson" :[NSNumber numberWithBool:NO],
                              };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"MailServer.getMailInfo",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)GetRepostEmialInfo:(NSString *)mailId
      successedBlock:(SuccessedBlock)success
         failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =
                        @{
                          @"resultCode" : @"0",
                          @"mailId" : mailId,
                          };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"MailServer.getMailTransmit",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}


//获取联系人
- (void)getContact:(NSString *)key
             depId:(NSString *)depId
    successedBlock:(SuccessedBlock)success
       failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"userName" :key== nil ? @"" : key,
                             @"deptId":depId,
                          };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AddressbookImpl.getAddressUserList",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

//获取联系人
- (void)getDeptUsers:(NSString *)depId
    successedBlock:(SuccessedBlock)success
       failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"groupId":depId,
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AddressbookImpl.getGroupUserList",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)getDepInfo:(NSString *)deptId
successedBlock:(SuccessedBlock)success
failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"deptId":deptId,
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AddressbookImpl.getDeptInfo",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)getDepatment:(NSString *)depId
            deptName:(NSString *)deptName
      successedBlock:(SuccessedBlock)success
         failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"parentId":depId,
                             @"deptName":deptName
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AddressbookImpl.getDeptList",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)getContactInfo:(NSString *)userId
        successedBlock:(SuccessedBlock)success
           failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"userId":userId,
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AddressbookImpl.getAddressUserInfo",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}


- (void)getMessageWithTel:(NSString *)tel
                  WithKey:(NSString *)key
               startIndex:(NSNumber *)index
           successedBlock:(SuccessedBlock)success
              failedBolck:(FailedBlock)failed

{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"userId" : [LoginUserUtil userId],
                             @"dPhonenum":tel == nil ? @"" : tel,
                             @"mContent" : key == nil ? @"" : key,
                             @"startIndex" : index,
                             @"recordCount": [NSNumber numberWithInteger:10]
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"SmsServer.getSmsList",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}



/**
 [""] *	@brief	发送短信
 [""] *
 [""] *	@param 	tel 	电话号码
 [""] *	@param 	content 	内容
 [""] *	@param 	success 	成功回调
 [""] *	@param 	failed 	失败回调
 [""] *
 [""] *	@return	void
 [""] */
- (void)sendMessageWithTel:(NSString *)tel
               WithContent:(NSString *)content
                  WithTime:(NSString *)sendTime
            successedBlock:(SuccessedBlock)success
               failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"userId" : [LoginUserUtil userId],
                             @"dPhonenum":tel == nil ? @"" : tel,
                             @"mcontent" : content == nil ? @"" : content,
                             @"sendTime" : sendTime == nil ? @"" : sendTime,
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"SmsServer.saveSms",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}


- (void)getNoticeList:(NSString *)key
                index:(NSNumber *)index
                isRead:(BOOL)isRead
                successedBlock:(SuccessedBlock)success
                failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"userId" : [LoginUserUtil userId],
                             @"title" : key == nil ? @"" : key,
                             @"isRead":isRead ? @"1" : @"0",
                             @"startIndex" : index,
                             @"recordCount": [NSNumber numberWithInteger:20]
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"NoticeServer.getNoticeReceiveList",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)getAbsenceList:(NSString *)key
                 index:(NSNumber *)index
                statu:(BOOL)statu
        successedBlock:(SuccessedBlock)success
           failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"userId" : [LoginUserUtil userId],
                             @"subject" : key == nil ? @"" : key,
                             @"todoMsgStatus":statu ? @"0" : @"1",
                             @"startIndex" : index,
                             @"pagecount": [NSNumber numberWithInteger:20]
                             };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AbsenceServer.getAbsenceList",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)disagree:(NSDictionary *)info
  successedBlock:(SuccessedBlock)success
     failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"absenceDate" : [LocalTimeUtil getCurrentDay],
                             @"absenceEndDate" : [info stringWithFilted:@"6"],
                             @"absenceRemark" : [info stringWithFilted:@"4"],
                             @"absenceStartDate" :[info stringWithFilted:@"5"],
                             @"absenceType":[info stringWithFilted:@"3"],
                             @"deptId":[LoginUserUtil deptId],
                             @"deptName" : [LoginUserUtil deptName],
                             @"id" : [info stringWithFilted:@"id"],
                             @"orgId" : @"0",
                             @"orgName" : @"",
                             @"status" : @(-1),
                             @"subject":[info stringWithFilted:@"2"],
                             @"userId" : [LoginUserUtil userId],
                             @"userName" : [LoginUserUtil userName]
                             };
    
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];

    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AbsenceServer.updateAbsenceStauts",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}


- (void)agreeAbsence:(NSDictionary *)info
      successedBlock:(SuccessedBlock)success
         failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"absenceDate" : [LocalTimeUtil getCurrentDay],
                             @"absenceEndDate" : [info stringWithFilted:@"6"],
                             @"absenceRemark" : [info stringWithFilted:@"4"],
                             @"absenceStartDate" :[info stringWithFilted:@"5"],
                             @"absenceType":[info stringWithFilted:@"3"],
                             @"deptId":[LoginUserUtil deptId],
                             @"deptName" : [LoginUserUtil deptName],
                             @"id" : [info stringWithFilted:@"id"],
                             @"orgId" : @"0",
                             @"orgName" : @"",
                             @"status" : @(1),
                             @"subject":[info stringWithFilted:@"2"],
                             @"userId" : [LoginUserUtil userId],
                             @"userName" : [LoginUserUtil userName]
                             };
    
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AbsenceServer.updateAbsenceStauts",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}


- (void)saveAbsence:(NSDictionary *)info
     successedBlock:(SuccessedBlock)success
        failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"absenceDate" : [LocalTimeUtil getCurrentDay],
                             @"absenceEndDate" : [info stringWithFilted:@"6"],
                             @"absenceRemark" : [info stringWithFilted:@"4"],
                             @"absenceStartDate" :[info stringWithFilted:@"5"],
                             @"absenceType":[info stringWithFilted:@"3"],
                             @"deptId":[LoginUserUtil deptId],
                             @"deptName" : [LoginUserUtil deptName],
                             @"id" : [info stringWithFilted:@"id"],
                             @"orgId" : @"0",
                             @"orgName" : @"",
                             @"status" : @(0),
                             @"subject":[info stringWithFilted:@"2"],
                             @"userId" : [LoginUserUtil userId],
                             @"userName" : [LoginUserUtil userName]
                             };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];

    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AbsenceServer.postSaveAbsence",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)postAbsence:(NSDictionary *)info
     successedBlock:(SuccessedBlock)success
        failedBolck:(FailedBlock)failed
{
    
    NSDictionary *reqDic = @{
                             @"resultCode" : @"0",
                             @"absenceDate" : [LocalTimeUtil getCurrentDay],
                             @"absenceEndDate" : [info stringWithFilted:@"6"],
                             @"absenceRemark" : [info stringWithFilted:@"4"],
                             @"absenceStartDate" :[info stringWithFilted:@"5"],
                             @"absenceType":[info stringWithFilted:@"3"],
                             @"deptId":[LoginUserUtil deptId],
                             @"deptName" : [LoginUserUtil deptName],
                             @"id" : [info stringWithFilted:@"id"],
                             @"orgId" : @"0",
                             @"orgName" : @"",
                             @"status" : @(2),
                             @"subject":[info stringWithFilted:@"2"],
                             @"userId" : [LoginUserUtil userId],
                             @"userName" : [LoginUserUtil userName],
                             @"sendUser": [LoginUserUtil userName],
                             @"receiveUserId":[info stringWithFilted:@"receiveUserId"],
                             @"receiveUserName":[info stringWithFilted:@"receiveUserName"],
                             };
    
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];

    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AbsenceServer.postCommitAbsence",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)uploadFileWithPath:(NSData *)fileData
                    params:(NSDictionary *)params
              successBlock:(SuccessedBlock)success
               failedBolck:(FailedBlock)failed
{
    [self startMulitDataPost:FILE_SERVER fileName:params[@"filename"] postFile:fileData paragram:params successedBlock:success failedBolck:failed];
}

- (void)uploadPDFFileWithPath:(NSString *)filePath
                 withFileData:(NSData *)data
                       params:(NSDictionary *)params
                 successBlock:(SuccessedBlock)success
                  failedBolck:(FailedBlock)failed
{
    
    [self POST:FILE_SERVER
    parameters:params
constructingBodyWithBlock:^(id <AFMultipartFormData> formData)
     {
         NSString *filename = nil;
         NSString *contentType = nil;
         [self transferWithFileName:&filename andContentType:&contentType filePath:filePath];
         if(filename&&contentType)
         {
             [formData appendPartWithFileData:data name:@"file" fileName:filename mimeType:contentType];
         }
         else
         {
             SpeLog(@"获取contentType失败");
         }
     }
       success:^(AFHTTPRequestOperation *operation, id responseObject)
     {
         if(success)
         {
             id res  = [operation.responseString objectFromJSONString];
             SpeAssert([res isKindOfClass:[NSDictionary class]]);
             success((NSDictionary *)res);
         }
     }
       failure:^(AFHTTPRequestOperation *operation, NSError *error)
     {
         if (failed)
         {
             failed(nil, error);
         }
     }
     ];
}

- (void)downloadFileWithUrl:(NSString *)url
                     params:(NSDictionary *)params
               successBlock:(SuccessedBlock)success
                failedBolck:(FailedBlock)failed
{
    NSString *destPath = [LocalImageHelper getStoredFilePath:YES];
    NSString *fileName = [LocalImageHelper getfileNameFromCurrentTime];
    if(url && url.length > 0)
    {
       destPath = [destPath stringByAppendingFormat:@"/%@%@", fileName,url];
    }
    else
    {
        destPath = [destPath stringByAppendingFormat:@"/%@.jpg", fileName];
    }
    
    NSMutableURLRequest *request = [self.requestSerializer requestWithMethod:@"GET" URLString:FILE_SERVER parameters:params];
    
    AFHTTPRequestOperation *operation = [[AFHTTPRequestOperation alloc] initWithRequest:request];
    [operation  setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject) {
        if(success)
        {
            success(@{
                      @"type":@(ENUM_MSG_TYPE_PIC),
                      @"path": destPath
                      });
        }
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        if (failed)
        {
            failed(operation, error);
        }
    }];
    
    [operation setDownloadProgressBlock:^(NSUInteger bytesRead, long long totalBytesRead, long long totalBytesExpectedToRead) {
        NSLog(@"%@, %@", @(totalBytesRead), @(totalBytesExpectedToRead));
    }];
    
    NSOutputStream *output = [[NSOutputStream alloc] initToFileAtPath:destPath append:NO];
    [operation setOutputStream:output];
    [operation start];
}

- (void)dealwithEmail:(int)type
            withInfo:(NSDictionary *)info
        withReceiver:(NSArray *)arrReceive
        withReceiverBTW:(NSArray *)arrReceiveBTW
        withReceiverSecret:(NSArray *)arrReceiveSecret
             withUUid:(NSString *)uuid
    successedBlock:(SuccessedBlock)success
       failedBolck:(FailedBlock)failed
{
    
    NSMutableString *arrID1 = [NSMutableString string];
    NSMutableString *arrName1 = [NSMutableString string];
    if(arrReceive.count == 0)
    {
        [arrID1 appendString:@""];
        [arrName1 appendString:@""];
    }
    for(ADTContacterInfo  *info in arrReceive)
    {
        [arrID1 appendFormat:@"%@,",info.m_strUserID];
        [arrName1 appendFormat:@"%@,",info.m_strUserName];
    }
    
    NSMutableString *arrID2 = [NSMutableString string];
    NSMutableString *arrName2 = [NSMutableString string];
    if(arrReceiveBTW.count == 0)
    {
        [arrID2 appendString:@""];
        [arrName2 appendString:@""];
    }
    for(ADTContacterInfo *info in arrReceiveBTW)
    {
        [arrID2 appendFormat:@"%@,",info.m_strUserID];
        [arrName2 appendFormat:@"%@,",info.m_strUserName];
    }
    
    NSMutableString *arrID3 = [NSMutableString string];
    NSMutableString *arrName3 = [NSMutableString string];
    if(arrReceiveSecret.count == 0)
    {
        [arrID3 appendString:@""];
        [arrName3 appendString:@""];
    }
    for(ADTContacterInfo *info in arrReceiveSecret)
    {
        [arrID3 appendFormat:@"%@,",info.m_strUserID];
        [arrName3 appendFormat:@"%@,",info.m_strUserName];
    }
    
    if(arrName1.length > 0)
    {
        arrName1 = [NSMutableString stringWithString:[arrName1 substringToIndex:arrName1.length-1]];
    }
    if(arrID1.length > 0)
    {
        arrID1 = [NSMutableString stringWithString:[arrID1 substringToIndex:arrID1.length-1]];
    }
    
    if(arrName2.length > 0)
    {
        arrName2 = [NSMutableString stringWithString:[arrName2 substringToIndex:arrName2.length-1]];
    }
    
    if(arrID2.length > 0)
    {
        arrID2 = [NSMutableString stringWithString:[arrID2 substringToIndex:arrID2.length-1]];
    }
    
    if(arrName3.length > 0)
    {
        arrName3 = [NSMutableString stringWithString:[arrName3 substringToIndex:arrName3.length-1]];
    }
    if(arrID3.length > 0)
    {
        arrID3 = [NSMutableString stringWithString:[arrID3 substringToIndex:arrID3.length-1]];
    }
    
    id accrssory = [info stringWithFilted:@"accessory"];
    if([accrssory isKindOfClass:[NSString class]])
    {
       if([[info stringWithFilted:@"accessory"]isEqualToString:@""])
       {
           accrssory = @[];
       }
    }

    
    NSDictionary *reqDic = @{
                             @"resultCode" :  @"0",
                             @"mailId" : info[@"mailId"] == nil ?uuid : [info stringWithFilted:@"mailId"],
                             @"subject" : [info stringWithFilted:@"subject"],
                             @"content" : [info stringWithFilted:@"content"],
                             @"mainIds" :arrID1,
                             @"mainNames":arrName1,
                             @"copyIds":arrID2,
                             @"copyNames" : arrName2,
                             @"blindIds" : arrID3,
                             @"blindNames" : arrName3,
                             @"sendDate" : [LocalTimeUtil getCurrentTime],
                             @"senderId" : [LoginUserUtil userId],
                             @"senderName":[LoginUserUtil userName],
                             @"important" : @(0),
                             @"accessory" : accrssory,
                             @"readStatus": @(0),
                             @"receivers":@[],
                             @"mailType" : @(0),
                             @"hasMailFile" : [NSNumber numberWithBool:NO],
                             @"transmitStatus":@(0),
                             @"backStatus" : @(0),
                             @"mailStatus" : @(0)
                             };
    NSString *code = nil;
    if(type == 0)
    {
        code = @"MailServer.sendMail";
    }
    else if (type == 1)
    {
        code = @"MailServer.saveMail";
    }
    else
    {
        code = @"MailServer.sendMail";
    }
    
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": code,
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}



- (void)deleteEmail:(NSDictionary *)reqDic
        successedBlock:(SuccessedBlock)success
           failedBolck:(FailedBlock)failed
{

    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"MailServer.delMail",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}


- (void)deleteFile:(NSString *)fileId
           docType:(int)docType
    successedBlock:(SuccessedBlock)success
       failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = @{
                             @"fileid":fileId,
                             @"userid":[LoginUserUtil userId],
                             @"doctype":@(docType)
                             };
    
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];

    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"FileServer.fileDel",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}


- (void)getTodoInfo:(NSString *)msgId
successedBlock:(SuccessedBlock)success
failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                          @"resultCode" : @"0",
                          @"messageId" : msgId,
                          @"userId" : [LoginUserUtil userId]
                          };
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ItemServer.getUserWorkItem",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)saveTodoFile:(NSString *)option
WithInfo:(ADTGovermentFileInfo *)info
successedBlock:(SuccessedBlock)success
failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"userid" : [LoginUserUtil userId],
                              @"flowmodelid" : info.m_strFlowModelId,
                              @"messageid" : info.m_strMessageId,
                              @"important" : @(0),
                              @"subject" : info.m_strSubject,
                              @"form":info.m_arrOriginalForm ,
                              @"opinion" : option == nil ? @"" : option
                              };
    
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];

    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ItemServer.saveflow",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}


- (void)getTodoContact:(NSDictionary *)reqDic
successedBlock:(SuccessedBlock)success
failedBolck:(FailedBlock)failed
{
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ItemServer.getFlowUser",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)giveUpTodo:(NSDictionary *)reqDic
successedBlock:(SuccessedBlock)success
failedBolck:(FailedBlock)failed
{
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ItemServer.sendbackflow",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)commitTodo:(NSDictionary *)reqDic
successedBlock:(SuccessedBlock)success
failedBolck:(FailedBlock)failed
{
    
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];

    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ItemServer.sendflow",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)getGovermentFileInfo:(NSString *)documentId
              successedBlock:(SuccessedBlock)success
                 failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"flowId" :documentId,
                              @"userId" : [LoginUserUtil userId]
                              };
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ItemServer.getItemDetail",
                            @"DTYPE": @"0",
                            @"DATA" :[reqDic JSONString]
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)updateNotice:(NSString *)noticeId
successedBlock:(SuccessedBlock)success
failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"isRead":@"1",
                              @"id" :noticeId,
                              @"userId" : [LoginUserUtil userId]
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];

    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"NoticeServer.updateReceive",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)deleAbense:(NSString *)abenseId
    successedBlock:(SuccessedBlock)success
       failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"id" :abenseId,
                              @"userId" : [LoginUserUtil userId]
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AbsenceServer.delAbsence",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)updateEmailStateToReaded:(NSString *)msgId
                  successedBlock:(SuccessedBlock)success
                     failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"msgId" :msgId,
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"MailServer.updateMailRead",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

//检查更新
- (void)gettheLastestVersion:(SuccessedBlock)success failedBolck:(FailedBlock)failed
{
    NSString *url = @"http://melaka.fir.im/api/v2/app/55591f138e82369a570010bf/versions?token=WKQhCC19JIygnoM2k3H4dojAWYx3I4x5jo1iO7Qm";
    [self startGetWith:url paragram:nil successedBlock:success failedBolck:failed];
}

- (void)getTipNum:(SuccessedBlock)success failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"MailServer.updateMailRead",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

#pragma mark -  日程

- (void)getScheduleList:(NSInteger)startIndex
              startTime:(NSString *)startTime
                endTime:(NSString *)endTime
         successedBlock:(SuccessedBlock)success
            failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"userId" :  [LoginUserUtil userId],
                              @"startIndex":@(startIndex),
                              @"recordCount":@(10),
                              @"startTime":startTime == nil ?[LocalTimeUtil getCurrentDay] : startTime,
                              @"endTime":endTime == nil ?[LocalTimeUtil getCurrentDay] : endTime,
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ScheServer.getScheListByDate",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}


- (void)saveSchdule:(NSDictionary *)info
     successedBlock:(SuccessedBlock)success
        failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"userId" :  [LoginUserUtil userId],
                              @"content":info[@"content"],
                              @"endTime":info[@"endTime"],
                              @"place":info[@"place"],
                              @"remindTime":info[@"remindTime"],
                              @"scheIds":@[],
                              @"sms":info[@"sms"],
                              @"startTime":info[@"startTime"],
                              @"subject":info[@"subject"],
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ScheServer.saveSche",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)modifySchdule:(NSDictionary *)info
     successedBlock:(SuccessedBlock)success
        failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"userId" :  [LoginUserUtil userId],
                              @"scheId":info[@"scheId"],
                              @"content":info[@"content"],
                              @"endTime":info[@"endTime"],
                              @"place":info[@"place"],
                              @"remindTime":info[@"remindTime"],
                              @"scheIds":@[],
                              @"sms":info[@"sms"],
                              @"startTime":info[@"startTime"],
                              @"subject":info[@"subject"],
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ScheServer.saveSche",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)deleteSchdule:(NSDictionary *)info
       successedBlock:(SuccessedBlock)success
          failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"userId" :  [LoginUserUtil userId],
                              @"scheId":info[@"scheId"],
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"ScheServer.delSche",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)getNum:(NSInteger)type
successedBlock:(SuccessedBlock)success
   failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic = type == 1 ?
                            @{
                              @"resultCode" : @"0",
                              @"userId" :  [LoginUserUtil userId],
                              }
                            :
                            @{
                              @"resultCode" : @"0",
                              @"userId" :  [LoginUserUtil userId],
                              @"actorClass":@"0",
                              @"appType": @"0",
                              @"subject": @""
                              }
                        ;
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": type == 1 ?   @"MailServer.getMailTaskCount" : @"ItemServer.getItemTaskCount",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}


- (void)getGroupList:(NSString *)depId
       successedBlock:(SuccessedBlock)success
          failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"userId" :  [LoginUserUtil userId],
                              @"depId":depId == nil ? @"" : depId
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"AddressbookImpl.getGroupList",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

- (void)updateMessageToReaded:(NSString *)msgId
               successedBlock:(SuccessedBlock)success
                  failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"resultCode" : @"0",
                              @"userId" :  [LoginUserUtil userId],
                              @"isRead":@"1",
                              @"id":msgId
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"NoticeServer.updateReceive",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

#pragma mark - 建邺oa新增接口

- (void)getMeetingManagerList:(NSInteger)index
               successedBlock:(SuccessedBlock)success
                  failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"recordCount" : [NSNumber numberWithInt:10],
                              @"userId" :  [LoginUserUtil userId],
                              @"meetingName":@"",
                              @"deptId":[LoginUserUtil deptId],
                              @"unitId":[LoginUserUtil orgId],
                              @"startIndex":[NSNumber numberWithInteger:index],
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"MeetingServer.getAuditMeetingRelationList",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

#pragma mark - 督查督办

- (void)getObserverList:(NSInteger)index
         successedBlock:(SuccessedBlock)success
            failedBolck:(FailedBlock)failed
{
    NSDictionary *reqDic =  @{
                              @"recordCount" : [NSNumber numberWithInteger:10],
                              @"userId" :  [LoginUserUtil userId],
                              @"subject":@"",
                              @"unitId":[LoginUserUtil orgId],
                              @"startIndex":[NSNumber numberWithInteger:index],
                              };
    SBJson4Writer *write = [SBJson4Writer new];
    NSString *retString = [write stringWithObject:reqDic];
    
    NSDictionary * dic =  @{
                            @"TOKEN":[LoginUserUtil accessToken],
                            @"KEY":  @"jsddkj",
                            @"CODE": @"DocManagerServer.getDocManagerList",
                            @"DTYPE": @"0",
                            @"DATA" :retString
                            };
    [self startNormalPostWith:nil paragram:@{@"DATA":[self encodeToPercentEscapeString:[dic JSONString]]} successedBlock:success failedBolck:failed];
}

@end
